找出所有相加之和为 n 的 k 个数的组合。组合中只允许含有 1 - 9 的正整数，并且每种组合中不存在重复的数字。

说明：
    所有数字都是正整数。
    解集不能包含重复的组合。 

示例 1:
输入: k = 3, n = 7
输出: [[1,2,4]]

示例 2:
输入: k = 3, n = 9
输出: [[1,2,6], [1,3,5], [2,3,4]]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/combination-sum-iii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    List<List<Integer>> list14 = new ArrayList<>();
    List<Integer> list15 = new ArrayList<>();
    public List<List<Integer>> combinationSum3(int k, int n) {
        if (k == 0) return list14;
        getCombination(k,n,0,1);
        return list14;
    }

    public void getCombination(int k, int n, int sumCom, int start) {
        if (sumCom == n && list15.size() == k) {
            list14.add(new ArrayList<>(list15));
            return;
        }
        if (sumCom > n || list15.size() > k) return;
        for (int i = start; i < 10; i++) {
            if (n - sumCom < i) return;
            list15.add(i);
            getCombination(k, n, sumCom + i, i+1);
            list15.remove(list15.size() - 1);
        }
    }
}
