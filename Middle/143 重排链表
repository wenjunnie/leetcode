给定一个单链表 L：L0→L1→…→Ln-1→Ln ，
将其重新排列后变为： L0→Ln→L1→Ln-1→L2→Ln-2→…
你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。

示例 1:
给定链表 1->2->3->4, 重新排列为 1->4->2->3.

示例 2:
给定链表 1->2->3->4->5, 重新排列为 1->5->2->4->3.

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/reorder-list
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
        if (head == null || head.next == null) return;
        int length = 0;
        ListNode temp = head;
        ListNode cur = head;
        ListNode pre = head;
        ListNode left = head;
        while (temp != null) {
            length++;
            temp = temp.next;
        }
        int mid = length >> 1;
        for (int i = 0; i < mid-1; i++) {
            pre = pre.next;
        }
        cur = pre.next;
        pre.next = null;
        ListNode revPre = null;
        while (cur != null) {
            ListNode tmp = cur.next;
            cur.next = revPre;
            revPre = cur;
            cur = tmp;
        }
        while (left != null && revPre != null) {
           ListNode node = left.next;
           if (node != null) {
               left.next = revPre;
               revPre = revPre.next;
               left.next.next = node;
               left = node;
           } else {
               left.next = revPre;
               break;
           }
       }
    }
}
