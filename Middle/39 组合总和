给定一个无重复元素的数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。
candidates 中的数字可以无限制重复被选取。

说明：
    所有数字（包括 target）都是正整数。
    解集不能包含重复的组合。 

示例 1:
输入: candidates = [2,3,6,7], target = 7,
所求解集为:
[
  [7],
  [2,2,3]
]

示例 2:
输入: candidates = [2,3,5], target = 8,
所求解集为:
[
  [2,2,2,2],
  [2,3,3],
  [3,5]
]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/combination-sum
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    List<List<Integer>> list14 = new ArrayList<>();
    List<Integer> list15 = new ArrayList<>();
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        Arrays.sort(candidates);
        getCombination(candidates,target,0,0);
        return list14;
    }

    public void getCombination(int[] candidates, int target, int sumCom, int start) {
        if (sumCom == target) {
            list14.add(new ArrayList<>(list15));
            return;
        }
        if (sumCom > target) return;
        for (int i = start; i < candidates.length; i++) {
            list15.add(candidates[i]);
            getCombination(candidates, target, sumCom + candidates[i], i);
            list15.remove(list15.size() - 1);
        }
    }
}
