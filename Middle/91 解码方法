一条包含字母 A-Z 的消息通过以下方式进行了编码：
'A' -> 1
'B' -> 2
...
'Z' -> 26
给定一个只包含数字的非空字符串，请计算解码方法的总数。

示例 1:
输入: "12"
输出: 2
解释: 它可以解码为 "AB"（1 2）或者 "L"（12）。

示例 2:
输入: "226"
输出: 3
解释: 它可以解码为 "BZ" (2 26), "VF" (22 6), 或者 "BBF" (2 2 6) 。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/decode-ways
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    /**
     * 遇到0且不在26内，返回0；
     * 遇到0，返回arr[i-2]；
     * 遇到0且在26内或非0且不在26内，返回arr[i-1];
     * 否则，返回arr[i-1] + arr[i-2]。
     * @param s
     * @return
     */
    public int numDecodings(String s) {
        if(s.length() == 0 || s.charAt(0) == '0') return 0;
        if(s.length() == 1) return 1;
        int[] arr = new int[s.length()];
        arr[0] = 1;
        int x = Integer.parseInt(String.valueOf(s.charAt(1)));
        int k = Integer.parseInt(String.valueOf(s.charAt(0)));
        if(x == 0 && k > 2) arr[1] = 0;
        else if(k > 2 || x == 0 || (x > 6 && k >= 2)) {
            arr[1] = 1;
        }else {
            arr[1] = 2;
        }
        for(int i = 2; i < s.length(); i++) {
            int y = Integer.parseInt(String.valueOf(s.charAt(i)));
            int z = Integer.parseInt(String.valueOf(s.charAt(i-1)));
            if(y == 0 && (z > 2 || z == 0)) return 0;
            if(y == 0) arr[i] = arr[i-2];
            else if(z > 2 || z == 0 || (z >= 2 && y > 6)) {
                arr[i] = arr[i-1];
            }else {
                arr[i] = arr[i-1] + arr[i-2];
            }
        }
        return arr[s.length()-1];
    }
}
