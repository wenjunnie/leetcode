给定一个字符串 s，将 s 分割成一些子串，使每个子串都是回文串。

返回 s 所有可能的分割方案。

示例:

输入: "aab"
输出:
[
  ["aa","b"],
  ["a","a","b"]
]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/palindrome-partitioning
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    List<List<String>> list8 = new ArrayList<>();
    List<String> list9 = new ArrayList<>();
    public List<List<String>> partition(String s) {
        if (s.length() == 0) return list8;
        getPalindrome(s);
        return list8;
    }

    public void getPalindrome(String s) {
        if (s.length() == 0) {
            list8.add(new ArrayList<>(list9));
        }
        for (int i = 0; i < s.length(); i++) {
            String tmp = s.substring(0,i+1);
            if (isPalindromeString(tmp)) {
                list9.add(tmp);
                getPalindrome(s.substring(i+1));
                list9.remove(list9.size() - 1);
            }
        }
    }

    public boolean isPalindromeString(String s) {
        StringBuilder builder = new StringBuilder(s);
        builder.reverse();
        return builder.toString().equals(s);
    }
}
