给定一个二叉树和一个目标和，找到所有从根节点到叶子节点路径总和等于给定目标和的路径。
说明: 叶子节点是指没有子节点的节点。

示例:
给定如下二叉树，以及目标和 sum = 22，

              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1

返回:

[
   [5,4,11,2],
   [5,8,4,5]
]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/path-sum-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    List<List<Integer>> list4 = new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<Integer> list5 = new ArrayList<>();
        if (root == null) return list4;
        findPath(root,sum,list5);
        return list4;
    }
    
    public void findPath(TreeNode root, int sum, List<Integer> list) {
        if (root != null) {
            list.add(root.val);
            if (root.left == null && root.right == null && root.val == sum) {
                list4.add(new ArrayList<>(list));
            }
            findPath(root.left,sum-root.val,new ArrayList<>(list));
            findPath(root.right,sum-root.val,new ArrayList<>(list));
        }
    }
}
