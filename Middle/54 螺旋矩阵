给定一个包含 m x n 个元素的矩阵（m 行, n 列），请按照顺时针螺旋顺序，返回矩阵中的所有元素。

示例 1:
输入:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
输出: [1,2,3,6,9,8,7,4,5]

示例 2:
输入:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
输出: [1,2,3,4,8,12,11,10,9,5,6,7]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/spiral-matrix
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> list = new ArrayList<>();
        if(matrix.length == 0 || matrix[0].length == 0) return list;
        int up = 0, down = matrix.length-1, left = 0, right = matrix[0].length-1;
        while (up <= down && left <= right) {
            for(int i = left; i <= right; i++) list.add(matrix[up][i]);
            up++;
            for(int i = up; i <= down; i++) list.add(matrix[i][right]);
            right--;
            if(up <= down) {
                for(int i = right; i >= left; i--) list.add(matrix[down][i]);
                down--;
            }
            if(left <= right) {
                for(int i = down; i >= up; i--) list.add(matrix[i][left]);
                left++;
            }
        }
        return list;
    }
}
