输入某二叉树的前序遍历和中序遍历的结果，请重建该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。

例如，给出
前序遍历 preorder = [3,9,20,15,7]
中序遍历 inorder = [9,3,15,20,7]

返回如下的二叉树：

    3
   / \
  9  20
    /  \
   15   7

限制：
0 <= 节点个数 <= 5000

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    private int target = 0;
    private int[] preorder;
    private int[] inorder;
    private HashMap<Integer,Integer> map = new HashMap<>();
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        this.preorder = preorder;
        this.inorder = inorder;
        if(preorder.length == 0 || inorder.length == 0) return null;
        int index = 0;
        for(int num : inorder) {
            map.put(num,index++);
        }
        return DFS(0,inorder.length);
    }
    
    public TreeNode DFS(int left, int right) {
        if(left == right) return null;
        int val = preorder[target++];
        int index = map.get(val);
        TreeNode root = new TreeNode(val);
        root.left = DFS(left,index);
        root.right = DFS(index+1,right);
        return root;
    }
}
