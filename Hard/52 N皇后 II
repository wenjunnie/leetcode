n 皇后问题研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。
上图为 8 皇后问题的一种解法。
给定一个整数 n，返回 n 皇后不同的解决方案的数量。

示例:
输入: 4
输出: 2
解释: 4 皇后问题存在如下两个不同的解法。
[
 [".Q..",  // 解法 1
  "...Q",
  "Q...",
  "..Q."],

 ["..Q.",  // 解法 2
  "Q...",
  "...Q",
  ".Q.."]
]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/n-queens-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    int sum = 0;
    boolean[] col, dia1, dia2;
    public int totalNQueens(int n) {
        if (n == 0) return 0;
        col = new boolean[n];
        dia1 = new boolean[2*n-1];
        dia2 = new boolean[2*n-1];
        putQueens(n,0,new ArrayList<>());
        return sum;
    }

    public void putQueens(int n, int index, List<Integer> list) {
        if (index == n) {
            sum++;
            return;
        }
        for (int i = 0; i < n; i++) {
            if (!col[i] && !dia1[index+i] && !dia2[index-i+n-1]) {
                col[i] = true;
                dia1[index+i] = true;
                dia2[index-i+n-1] = true;
                list.add(i);
                putQueens(n,index+1,list);
                col[i] = false;
                dia1[index+i] = false;
                dia2[index-i+n-1] = false;
                list.remove(list.size()-1);
            }
        }
    }
}
