报数序列是一个整数序列，按照其中的整数的顺序进行报数，得到下一个数。其前五项如下：

1.     1
2.     11
3.     21
4.     1211
5.     111221

1 被读作  "one 1"  ("一个一") , 即 11。
11 被读作 "two 1s" ("两个一"）, 即 21。
21 被读作 "one 2",  "one 1" （"一个二" ,  "一个一") , 即 1211。

给定一个正整数 n（1 ≤ n ≤ 30），输出报数序列的第 n 项。
注意：整数顺序将表示为一个字符串。

示例 1:
输入: 1
输出: "1"

示例 2:
输入: 4
输出: "1211"

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/count-and-say
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    public String countAndSay(int n) {
        String[] str = new String[n];
        if(n == 0) return "";
        str[0] = "1";
        for(int i = 1; i < str.length; i++) {
            StringBuilder builder = new StringBuilder();
            if(str[i-1].length() == 1) {
                builder.append(1);
                builder.append(str[i-1].charAt(0));
            }else {
                int num = 1;
                for(int j = 1; j < str[i-1].length(); j++) {
                    boolean flag = str[i-1].charAt(j) == str[i-1].charAt(j-1);
                    if(flag) {
                        num++;
                        if(j == str[i-1].length()-1) {
                            builder.append(num);
                            builder.append(str[i-1].charAt(j-1));
                        }
                    } else{
                        builder.append(num);
                        builder.append(str[i-1].charAt(j-1));
                        num = 1;
                        if(j == str[i-1].length()-1) {
                            builder.append(1);
                            builder.append(str[i-1].charAt(j));
                        }
                    }
                }
            }
            str[i] = builder.toString();
        }
        return str[n-1];
    }
}
