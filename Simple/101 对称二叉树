给定一个二叉树，检查它是否是镜像对称的。
例如，二叉树 [1,2,2,3,4,4,3] 是对称的。
    1
   / \
  2   2
 / \ / \
3  4 4  3

但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:
    1
   / \
  2   2
   \   \
   3    3

说明:
如果你可以运用递归和迭代两种方法解决这个问题，会很加分。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/symmetric-tree
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        Stack<TreeNode> stack = new Stack<>();
        Stack<TreeNode> stack2 = new Stack<>();
        TreeNode left = root,right = root;
        while ((left != null || !stack.isEmpty()) && (right != null || !stack2.isEmpty())) {
            while (left != null) {
                stack.add(left);
                left = left.left;
            }
            while (right != null) {
                stack2.add(right);
                right = right.right;
            }
            left = stack.pop();
            right = stack2.pop();
            if(stack.size() != stack2.size() || left.val != right.val)
                return false;
            left = left.right;
            right = right.left;
            if(left == root && right == root) break;
        }
        return true;
    }
}
